using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace RemoteAdmin.Client.Certificates
{
    internal static class EmbeddedCerts
    {
        // Each chunk: prefix + exactly 1000 # characters
        private const string CLIENT_PFX_PART1 = "###PLACEHOLDER_CLIENT_PFX_PART1_5E4F2C90###" +
            "####################" + "####################" + "####################" + "####################" + "####################" + // 100
            "####################" + "####################" + "####################" + "####################" + "####################" + // 200
            "####################" + "####################" + "####################" + "####################" + "####################" + // 300
            "####################" + "####################" + "####################" + "####################" + "####################" + // 400
            "####################" + "####################" + "####################" + "####################" + "####################" + // 500
            "####################" + "####################" + "####################" + "####################" + "####################" + // 600
            "####################" + "####################" + "####################" + "####################" + "####################" + // 700
            "####################" + "####################" + "####################" + "####################" + "####################" + // 800
            "####################" + "####################" + "####################" + "####################" + "####################" + // 900
            "####################" + "####################" + "####################" + "####################" + "####################";   // 1000

        private const string CLIENT_PFX_PART2 = "###PLACEHOLDER_CLIENT_PFX_PART2_6F5E3D91###" +
            "####################" + "####################" + "####################" + "####################" + "####################" +
            "####################" + "####################" + "####################" + "####################" + "####################" +
            "####################" + "####################" + "####################" + "####################" + "####################" +
            "####################" + "####################" + "####################" + "####################" + "####################" +
            "####################" + "####################" + "####################" + "####################" + "####################" +
            "####################" + "####################" + "####################" + "####################" + "####################" +
            "####################" + "####################" + "####################" + "####################" + "####################" +
            "####################" + "####################" + "####################" + "####################" + "####################" +
            "####################" + "####################" + "####################" + "####################" + "####################" +
            "####################" + "####################" + "####################" + "####################" + "####################";

        private const string CLIENT_PFX_PART3 = "###PLACEHOLDER_CLIENT_PFX_PART3_7G6F4E92###" +
            "####################" + "####################" + "####################" + "####################" + "####################" +
            "####################" + "####################" + "####################" + "####################" + "####################" +
            "####################" + "####################" + "####################" + "####################" + "####################" +
            "####################" + "####################" + "####################" + "####################" + "####################" +
            "####################" + "####################" + "####################" + "####################" + "####################" +
            "####################" + "####################" + "####################" + "####################" + "####################" +
            "####################" + "####################" + "####################" + "####################" + "####################" +
            "####################" + "####################" + "####################" + "####################" + "####################" +
            "####################" + "####################" + "####################" + "####################" + "####################" +
            "####################" + "####################" + "####################" + "####################" + "####################";

        private const string CLIENT_PFX_PART4 = "###PLACEHOLDER_CLIENT_PFX_PART4_8H7G5F93###" +
            "####################" + "####################" + "####################" + "####################" + "####################" +
            "####################" + "####################" + "####################" + "####################" + "####################" +
            "####################" + "####################" + "####################" + "####################" + "####################" +
            "####################" + "####################" + "####################" + "####################" + "####################" +
            "####################" + "####################" + "####################" + "####################" + "####################" +
            "####################" + "####################" + "####################" + "####################" + "####################" +
            "####################" + "####################" + "####################" + "####################" + "####################" +
            "####################" + "####################" + "####################" + "####################" + "####################" +
            "####################" + "####################" + "####################" + "####################" + "####################" +
            "####################" + "####################" + "####################" + "####################" + "####################";

        private const string CLIENT_PFX_PASSWORD_RAW = "###PLACEHOLDER_CLIENT_PFX_PASSWORD_9B8A7D66###" +
            "####################" + "####################" + "####################" + "####################" + "####################"; // 100 chars

        private const string CA_CRT_PART1 = "###PLACEHOLDER_CA_CRT_PART1_4A3B2C1D###" +
            "####################" + "####################" + "####################" + "####################" + "####################" +
            "####################" + "####################" + "####################" + "####################" + "####################" +
            "####################" + "####################" + "####################" + "####################" + "####################" +
            "####################" + "####################" + "####################" + "####################" + "####################" +
            "####################" + "####################" + "####################" + "####################" + "####################" +
            "####################" + "####################" + "####################" + "####################" + "####################" +
            "####################" + "####################" + "####################" + "####################" + "####################" +
            "####################" + "####################" + "####################" + "####################" + "####################" +
            "####################" + "####################" + "####################" + "####################" + "####################" +
            "####################" + "####################" + "####################" + "####################" + "####################";

        private const string CA_CRT_PART2 = "###PLACEHOLDER_CA_CRT_PART2_5B4C3D2E###" +
            "####################" + "####################" + "####################" + "####################" + "####################" +
            "####################" + "####################" + "####################" + "####################" + "####################" +
            "####################" + "####################" + "####################" + "####################" + "####################" +
            "####################" + "####################" + "####################" + "####################" + "####################" +
            "####################" + "####################" + "####################" + "####################" + "####################" +
            "####################" + "####################" + "####################" + "####################" + "####################" +
            "####################" + "####################" + "####################" + "####################" + "####################" +
            "####################" + "####################" + "####################" + "####################" + "####################" +
            "####################" + "####################" + "####################" + "####################" + "####################" +
            "####################" + "####################" + "####################" + "####################" + "####################";

        // Property to extract password (removes prefix and padding)
        internal static string CLIENT_PFX_PASSWORD
        {
            get
            {
                var pwd = CLIENT_PFX_PASSWORD_RAW;
                pwd = pwd.Replace("###PLACEHOLDER_CLIENT_PFX_PASSWORD_9B8A7D66###", "");
                pwd = pwd.Replace("#", "");
                return pwd.TrimEnd('\0');
            }
        }

        // Reconstruct the full Base64 string from parts
        internal static string CLIENT_PFX_BASE64
        {
            get
            {
                return ReconstructFromChunks(
                    CLIENT_PFX_PART1,
                    CLIENT_PFX_PART2,
                    CLIENT_PFX_PART3,
                    CLIENT_PFX_PART4
                );
            }
        }

        internal static string CA_CRT_BASE64
        {
            get
            {
                return ReconstructFromChunks(
                    CA_CRT_PART1,
                    CA_CRT_PART2
                );
            }
        }

        private static string ReconstructFromChunks(params string[] chunks)
        {
            var sb = new StringBuilder();
            foreach (var chunk in chunks)
            {
                // Find where the actual data starts (after the prefix ###PLACEHOLDER_...###)
                int prefixEnd = chunk.IndexOf("###", 3); // Find second occurrence of ###
                if (prefixEnd != -1)
                {
                    prefixEnd += 3; // Move past the closing ###
                    var data = chunk.Substring(prefixEnd);
                    // Remove padding characters (#) and null terminators
                    data = data.Replace("#", "").TrimEnd('\0');
                    sb.Append(data);
                }
            }
            return sb.ToString();
        }
    }
}